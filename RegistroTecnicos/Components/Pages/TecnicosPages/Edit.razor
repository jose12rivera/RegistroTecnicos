@page "/Tecnicos/Edit"
@page "/Tecnicos/Edit/{TecnicoId:int}"
@inject TecnicosServices tecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="tecnico" FormName="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow border-0 rounded" style="background-color: white;">
        <div class="card-header bg-primary text-white" style="text-align:center;">
            <i class="fas fa-clipboard-list"><h3>Registros Tecnicos</h3></i>
        </div>

        <div class="card-body">
            @* TecnicoId *@
            <div class="row">
                <div class="col-md-8 mb-5">
                    <label for="TecnicoId" class="form-label">TecnicoId:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1mm;">
                            <InputNumber @bind-Value="tecnico.TecnicoId" class="form-control" style="font-size: 0.8rem;" aria-describedby="bottonbuscar" />
                        </div>
                    </div>
                </div>
            </div>

            @*   Nombres *@
            <div class="mb-5">
                <label for="Nombres" class="form-label">Nombres:</label>
                <InputText @bind-Value="tecnico.Nombres" class="form-control" />
                <ValidationMessage For="(()=>tecnico.Nombres)" />
            </div>
            @*   SueldoHora *@
            <div class="mb-5">
                <label for="SueldoHora" class="form-label">SueldoHora:</label>
                <InputNumber @bind-Value="tecnico.SueldoHora" class="form-control" />
                <ValidationMessage For="(()=>tecnico.SueldoHora)" />
            </div>
        </div>
        <div class="card-footer align; d-flex: justify-content-center">
            <div class="btn-group">
                <button style="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span>Nuevo</button>
                <button style="submit" class="btn btn-outline-success ml-2" @onclick="Guardar"><span class="bi bi-check-circle-fill"></span>Guardar</button>
                <i style="button" href="/Tecnicos/Index" class="btn btn-outline-danger ml-2" @onclick="Volver"><span class="bi bi-box-arrow-left"></span>Volver</i>
            </div>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos? tecnico { get; set; } = new Tecnicos();
    private bool Existe = false;

    protected override async Task OnInitializedAsync()
    {
        if(TecnicoId != 0)
        {
            tecnico = await tecnicosServices.Buscar(TecnicoId) ?? new Tecnicos();
        }
    }
    public async Task Nuevo()
    {
        tecnico = new Tecnicos();
        Existe = false;
    }

    public async Task<bool> Validar()
    {
        var TecnicoEliminado = await tecnicosServices.Listar(T => T.Nombres.ToLower() == tecnico.Nombres.ToLower() && T.TecnicoId != tecnico.TecnicoId);
        return TecnicoEliminado.Count == 0;
    }

    public async Task Guardar()
    {
        if (!await Validar())
        {
            return;
        }
        var guardado = await tecnicosServices.Guardar(tecnico);
        if (guardado)
        {
            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        var eliminado = await tecnicosServices.Eliminar(tecnico.TecnicoId);
        Nuevo();
    }

    public async Task Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Index");
    }
}
