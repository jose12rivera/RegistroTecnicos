@page "/Tecnicos/Create"
@inject TecnicosServices tecnicosServices
@inject TiposTecnicosServices tiposTecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: white;">
        <div class="card-header bg-primary text-white text-center p-2 rounded">
            <h3 style="font-weight: bold;" class="md-4 font-weight: bold; ">Registro Del  T&eacute;cnico</h3>
        </div>

        <div class="card-body">
            @* TecnicoId *@
            <div class="row">
                <div class="col-md-10 mb-5">
                    <label for="TecnicoId" class="form-label"><strong>T&eacute;cnicoId:</strong></label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1mm;">

                            <InputNumber @bind-Value="tecnico.TecnicoId" class="form-control" style="font-size: 0.8rem;" aria-describedby="bottonbuscar" />
                        </div>
                    </div>
                </div>
            </div>

            @*   Nombres *@
            <div class="mb-5">
                <label for="Nombres" class="form-label"><strong>Nombres:</strong></label>
                <InputText @bind-Value="tecnico.Nombres" class="form-control" />
                <ValidationMessage For="@(()=>tecnico.Nombres)" />
            </div>

            @* TipoTecnicoId  *@
            <div class="mb-5">
                <label> <strong>TipoT&eacute;cnicoId:</strong> </label>
                <InputSelect @bind-Value="tecnico.TipoTecnicoId " class="form-select">
                   <option value="0">Elejir Un tipoT&eacute;cnicos</option>
                    @foreach (var tipo in TiposTecnicos)
                    {
                        <option value="@tipo.TipoTecnicoId ">@tipo.Descripcion</option>
                    }
                </InputSelect> 
               <ValidationMessage For="@(()=>tecnico.SueldoHora)"/>
            </div>
           
            @*   SueldoHora *@
            <div class="mb-5">
                <label for="SueldoHora" class="form-label"><strong>SueldoHora:</strong></label>
                <InputNumber @bind-Value="tecnico.SueldoHora" class="form-control" />
                <ValidationMessage For="@(()=>tecnico.SueldoHora)" />
            </div>
        </div>

        <div class="card-footer  bg-light d-flex: justify-content-center mt-3">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-secondary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span>Nuevo</button>
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span>Guardar</button>
                <button type="button" class="btn btn-outline-primary" @onclick="Volver"><span class="bi bi-box-arrow-left"></span>Volver</button>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos? tecnico { get; set; } = new Tecnicos();
    public List<TiposTecnicos> TiposTecnicos { get; set; } = new List<TiposTecnicos>();
    private bool Existe = false;
    //Metodo OnInitialized
    protected override async Task OnInitializedAsync()
    {
        TiposTecnicos = await tiposTecnicosServices.Listar(t =>true);
    }
    //El Metodo Nuevo
    public async Task Nuevo()
    {
        tecnico = new Tecnicos();
        Existe = false;
    }
    //El Metodo Buscar
    public async Task Buscar()
    {
        Existe = false;
        var TecnicoEncontrado = await tecnicosServices.Buscar(tecnico.TecnicoId);
        if (TecnicoEncontrado != null)
        {
            tecnico = TecnicoEncontrado;
        }
        else
        {
            Nuevo();
        }
    }
    //El Metodo Validar
    public async Task<bool> Validar()
    {
        Existe = await tecnicosServices.Existe(tecnico.TecnicoId);
        return !Existe;
    }
    //El Metodo Guardar
    public async Task Guardar()
    {
        if (!await Validar())
        {
            return;
        }
        var guardado = await tecnicosServices.Guardar(tecnico);
        if (guardado)
        {
            Nuevo();
        }
    }
    //El Metodo Volver
    public async Task Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Index");
    }
}
