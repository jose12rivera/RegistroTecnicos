@page "/Trabajos/Details"
@page "/Trabajos/Details/{TrabajoId:int}"
@inject TrabajosServices trabajosServices
@inject ClientesServices clientesServices
@inject TecnicosServices tecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@if (trabajo != null)
{
    <div class="container">
        <div class="card show-header">
            <div class="card-header bg-primary text-white text-center p-2 rounded">
                <h3 class="text-center"><strong>Detalles Trabajos</strong></h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-10">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>TrabajoId:</strong>@trabajo.TrabajoId</li>
                                <li><strong>Fecha:</strong>@trabajo.Fecha</li>
                                <li><strong>ClienteId:</strong>@cliente.Nombres</li>
                                <li><strong>TecnicoId:</strong>@tecnico.Nombres</li>
                                <li><strong>Descripci&oacute;n:</strong>@trabajo.Descripcion</li>
                                <li><strong>Monto:</strong>@trabajo.Monto</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button type="button" class="btn btn-outline-primary ml-2" @onclick="Volver"><span class="bi bi-box-arrow-left"></span>Volver</button>
            <button type="button" class="btn btn-outline-danger ml-2" @onclick="Finalizar"><span class="bi bi-check-circle"></span>Finalizar</button>
        </div>
    </div>
}
else
{
    <p>Trabajos no encontrado.</p>
}
@code {
    [Parameter]
    public int TrabajoId { get; set; }
    public Trabajos? trabajo { get; set; } = new Trabajos();
    public Tecnicos? tecnico { get; set; } = new Tecnicos();
    public Clientes? cliente { get; set; } = new Clientes();
    //Metodo onitialize
    protected override async Task OnInitializedAsync()
    {
        if(TrabajoId != 0)
        {
            trabajo = await trabajosServices.Buscar(TrabajoId);
            cliente = await clientesServices.Buscar(trabajo.ClienteId);
            tecnico = await tecnicosServices.Buscar(trabajo.TecnicoId);
        }
    }
    //Metodo Finalizar
    public void Finalizar()
    {
        var mensaje = $"El{TrabajoId} ya esta Finalizado";
        navigationManager.NavigateTo($"/Trabajos/Index");
    }
    //Metodo Volver
    public async Task Volver()
    {
        navigationManager.NavigateTo("/Trabajos/Index");
    }
}
