@page "/Trabajos/Edit"
@page "/Trabajos/Edit/{TrabajoId:int}"
@inject TrabajosServices trabajosServices
@inject ClientesServices clientesServices
@inject TecnicosServices tecnicosServices
@inject PrioridadesServices prioridadesServices
@inject ArticulosServices articulosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="trabajo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card-header bg-primary text-white text-center p-2 rounded">
        <h3 style="font-weight: bold;" class="md-3 font-weight: bold;">Modificar el Trabajo</h3>
    </div>

    <div class="card-body">
        @*   TrabajoId *@
        <div class="mb-5">
            <label for="TrabajoId" class="form-label"><strong>TrabajoId:</strong></label>
            <InputNumber @bind-Value="trabajo.TrabajoId" class="form-control" />
        </div>

        @*   Fecha *@
        <div class="mb-5">
            <label for="Fecha" class="form-label"><strong>Fecha:</strong></label>
            <InputDate @bind-Value="trabajo.Fecha" class="form-control" />
            <ValidationMessage For="@(() => trabajo.Fecha)" />
        </div>

        @*    ClienteId *@
        <div class="mb-5">
            <label><strong>ClienteId:</strong></label>
            <InputSelect @bind-Value="trabajo.ClienteId" class="form-control">
                <option value="0">Selecionar un Cliente</option>
                @foreach (var cliente in this.cliente)
                {
                    <option value="@cliente.ClienteId">@cliente.Nombres</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => trabajo.ClienteId)" />
        </div>
        @* TecnicoId *@
        <div class="mb-5">
            <label><strong>TécnicoId:</strong></label>
            <InputSelect @bind-Value="trabajo.TecnicoId" class="form-control">
                <option value="0">Selecionar un Técnico</option>
                @foreach (var tecnico in this.tecnico)
                {
                    <option value="@tecnico.TecnicoId">@tecnico.Nombres</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => trabajo.TecnicoId)" />
        </div>

        @* PrioridadId  *@
        <div class="mb-5">
            <label><strong>PrioridadId:</strong></label>
            <InputSelect @bind-Value="trabajo.PrioridadId" class="form-control">
                <option value="0">Selecionar un una Prioridad</option>
                @foreach (var prioridad in this.prioridad)
                {
                    <option value="@prioridad.PrioridadId">@prioridad.Descripcion</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => trabajo.PrioridadId)" />
        </div>

        @*  Descripcion *@
        <div class="mb-5">
            <label for="Descripcion" class="form-label"><strong>Descripción:</strong></label>
            <InputText @bind-Value="trabajo.Descripcion" class="form-control" />
            <ValidationMessage For="@(() => trabajo.Descripcion)" />
        </div>

        @*  Monto *@
        <div class="mb-5">
            <label for="Monto" class="form-label"><strong>Monto:</strong></label>
            <InputNumber @bind-Value="trabajo.Monto" class="form-control" />
            <ValidationMessage For="@(() => trabajo.Monto)" />
        </div>


        <div class="border border-success p-3 mt-3">
            <h5 class="card-header">Detalle de Trabajos</h5>
            <div class="card-body">
                <div class="row align-items-end m-0">
                    @*  ArticuloId *@
                    <div class="col-md-4 p-0">
                        <InputSelect class="form-control" @bind-Value="selectedArticuloId">
                            <option value="0" selected disabled>Selecionar un Artículo</option>
                            @foreach (var articulo in ListaArticulos)
                            {
                                <option value="@articulo.ArticuloId">@articulo.Descripcion - Precio: @articulo.Precio</option>
                            }
                        </InputSelect>
                    </div>

                    @* cantidad *@
                    <div class="col-md-3 p-0">
                        <div class="input-group">
                            <span class="input-group-text">Cantidad:</span>
                            <InputNumber @bind-Value="TrabajosDetalle.Cantidad" class="form-control" />
                        </div>
                        
                        <ValidationMessage For="@(() => TrabajosDetalle.Cantidad)" />
                    </div>

                    @* Precio *@
                    <div class="col-md-3 p-0">
                        <div class="input-group">
                            <span class="input-group-text">Precio:</span>
                            <InputNumber @bind-Value="TrabajosDetalle.Precio" class="form-control" />
                        </div>
                       
                        <ValidationMessage For="@(() => TrabajosDetalle.Precio)" />
                    </div>

                       @* Botón Agregar  *@
                    <div class="col-md-2 p-0">
                        <button type="button" @onclick="AgregarDetalle" class="btn btn-outline-primary">
                            <span class="bi bi-plus mt-3"></span> Agregar
                        </button>
                    </div>
                </div>

                <table class="table table-bordered mt-3">
                    <thead>
                        <tr>
                            <th>Artículo</th>
                            <th>Cantidad</th>
                            <th>Precio</th>
                           
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var detalle in ListaTrabajosDetalle)
                        {
                            <tr>
                                <td>@detalle.ArticuloId</td>
                                <td>@detalle.Cantidad</td>
                                <td>@detalle.Precio</td>
                                <td>
                                    <button @onclick="() => Remover(detalle)" class="btn btn-outline-dark">
                                        <span class="bi bi-trash"></span> Remover
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (guardar)
    {
        <div class="alert alert-success" role="alert">
            Se guardaron los detalles del trabajo.
        </div>
    }
    @if (agregar)
    {
        <div class="alert alert-info" role="alert">
            Ya se agrego en detalles del trabajo.
        </div>
    }
    @if (eliminado)
    {
        <div class="alert alert-danger" role="alert">
            El detalle ha sido eliminado.
        </div>
    }

  
    <div class="card-footer d-flex justify-content-center">
        <button type="button" @onclick="Nuevo" class="btn btn-outline-secondary">
            <span class="bi bi-plus mt-3"></span> Nuevo
        </button>

        <button type="submit" class="btn btn-outline-success">
            <span class="bi bi-floppy mt-3"></span> Guardar
        </button>
        <button type="button" @onclick="Volver" class="btn btn-outline-primary">
            <span class="bi bi-arrow-left mt-3"></span>
            Volver
        </button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int TrabajoId { get; set; }
    public Trabajos trabajo { get; set; } = new Trabajos();
    public List<Tecnicos> tecnico { get; set; } = new List<Tecnicos>();
    public List<Clientes> cliente { get; set; } = new List<Clientes>();
    public List<Prioridades> prioridad { get; set; } = new List<Prioridades>();
    public List<TrabajosDetalle> ListaTrabajosDetalle { get; set; } = new List<TrabajosDetalle>();
    public List<Articulos> ListaArticulos { get; set; } = new List<Articulos>();
    public TrabajosDetalle TrabajosDetalle { get; set; } = new TrabajosDetalle();
    private int selectedArticuloId;
    private bool eliminado = false;
    private bool agregar = false;
    private bool guardar = false;
    private bool existe = false;

    protected override async Task OnInitializedAsync()
    {
        cliente = await clientesServices.Listar(t => true);
        tecnico = await tecnicosServices.Listar(t => true);
        prioridad = await prioridadesServices.Listar(t => true);
        ListaArticulos = await articulosServices.Listar(a => true);

        if (TrabajoId > 0)
        {
            trabajo = await trabajosServices.Buscar(TrabajoId);
            ListaTrabajosDetalle = trabajo.TrabajosDetalle.ToList();
        }
    }

    private void Nuevo()
    {
        trabajo = new Trabajos();
        ListaTrabajosDetalle.Clear();
    }

    private async Task Guardar()
    {
        if (!await Validar())
        {
            return;
        }

        trabajo.TrabajosDetalle = ListaTrabajosDetalle;
        var resultado = await trabajosServices.Guardar(trabajo);

        if (resultado)
        {
            guardar = true;
        }
    }

    public async Task<bool> Validar()
    {
        existe = await trabajosServices.Existe(trabajo.TrabajoId);
        return !existe;
    }
    public async Task Buscar()
    {
        existe = false;
        var encontrado = await trabajosServices.Buscar(trabajo.TrabajoId);
        if (encontrado != null)
        {
            trabajo = encontrado;
        }
        else
        {
            Nuevo();
        }
    }

    private void AgregarDetalle()
    {
        var articulo = ListaArticulos.FirstOrDefault(a => a.ArticuloId == selectedArticuloId);
        if (articulo == null)
        {
            return;
        }

        TrabajosDetalle.ArticuloId = articulo.ArticuloId;
        TrabajosDetalle.Precio = articulo.Precio;
        TrabajosDetalle.Costo = TrabajosDetalle.Cantidad * TrabajosDetalle.Precio;

        ListaTrabajosDetalle.Add(TrabajosDetalle);
        TrabajosDetalle = new TrabajosDetalle();
        agregar = true;
    }

    private void Remover(TrabajosDetalle detalle)
    {
        ListaTrabajosDetalle.Remove(detalle);
        eliminado = true;
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/Trabajos/Index");
    }
}
