@page "/Prioridades/Edit"
@page "/Prioridades/Edit/{PrioridadId:int}"
@inject PrioridadesServices prioridadesServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="Prioridad" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card-header bg-primary text-white text-center p-2 rounded">
        <h3 style="font-weight: bold;" class="md-3 font-weight: bold;">Registro Prioridades</h3>
    </div>
    <div class="card-body">
        @*  PrioridadId *@
        <div class="row">
            <div class="col-md-10 mb-5">
                <label for="PrioridadId" class="form-label"><strong>PrioridadId:</strong></label>
                <div class="input-group">
                    <div style="width: 40%; height: 1mm">
                        <InputNumber @bind-Value="Prioridad.PrioridadId" class="form-control" style="font-size: 0.8rem;" aria-labelledby="botonbuscar" />
                    </div>
                </div>
            </div>
        </div>

        @*   Descripcion *@
        <div>
            <label for="Descripcion" class="form-label"><strong>Descripcion:</strong></label>
            <InputText @bind-Value="Prioridad.Descripcion" class="form-control" />
            <ValidationMessage For="@(()=>Prioridad.Descripcion)" />
        </div>
       
        @*   Tiempo *@
        <div>
            <label for="Tiempo" class="form-label"><strong>Tiempo:</strong></label>
            <InputText @bind-Value="Prioridad.Tiempo" type="time" class="form-control" />
            <ValidationMessage For="@(()=>Prioridad.Tiempo)" />
        </div>
        <div class="card-footer align; justify-content-center">
            <div class="input-group">
                <button type="button" class="btn btn-outline-secondary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span>Nuevo</button>
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle"></span>Guardar</button>
                <button type="button" class="btn btn-outline-primary ml-2" @onclick="Volver"><span class="bi bi-box-arrow-left"></span>Volver</button>
            </div>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public int PrioridadId { get; set; }
    public Prioridades? Prioridad { get; set; } = new Prioridades();
    private bool existe = false;
    protected override async Task OnInitializedAsync()
    {
        if(PrioridadId != 0)
        {
            Prioridad = await prioridadesServices.Buscar(PrioridadId) ?? new Prioridades();
        }
       
    }
    public async Task Nuevo()
    {
        Prioridad = new Prioridades();
        existe = false;
    }

    public async Task<bool> Validar()
    {
        var ListaPrioridad = await prioridadesServices.Listar(p => p.Descripcion.ToLower() == Prioridad.Descripcion.ToLower() && p.PrioridadId != Prioridad.PrioridadId);
        return ListaPrioridad.Count == 0;
    }
    public async Task Guardar()
    {
        if (!await Validar())
        {
            return;
        }
        var guardado = await prioridadesServices.Guardar(Prioridad);
        if (guardado)
        {
            Nuevo();
        }
    }
    public async Task Volver()
    {
        navigationManager.NavigateTo("/Prioridades/Index");
    }
}

